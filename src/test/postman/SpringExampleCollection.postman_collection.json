{
	"info": {
		"_postman_id": "4f9de97f-82e9-4a47-a80b-ca7dfa45a801",
		"name": "SpringExampleSecurityCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Login Form",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "921460f9-c35e-498e-9289-22190df6f38a",
						"exec": [
							"// Parse HTML and get the CSRF Token",
							"var responseHTML = cheerio(responseBody);",
							"var csrfTokenName = pm.cookies.get(\"XSRF-TOKEN\");",
							"//var csrfTokenName = responseHTML.find('[name=\"_csrf\"]').attr('value');",
							"console.log(csrfTokenName);",
							"pm.collectionVariables.set(\"csrfTokenName\", csrfTokenName);",
							"",
							"pm.test(\"Get Login test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3cf6a80a-1687-40c7-991e-8e7e78ace83e",
						"exec": [
							"// Parse Cookie and get the CSRF Token",
							"var csrfTokenName = pm.cookies.get(\"XSRF-TOKEN\");",
							"console.log(csrfTokenName);",
							"pm.collectionVariables.set(\"csrfTokenName\", csrfTokenName);",
							"",
							"pm.test(\"Login test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Cache-Control",
						"value": "max-age=0"
					},
					{
						"key": "Upgrade-Insecure-Requests",
						"value": "1"
					},
					{
						"key": "Origin",
						"value": "http://localhost:8080"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36"
					},
					{
						"key": "Accept",
						"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "navigate"
					},
					{
						"key": "Sec-Fetch-User",
						"value": "?1"
					},
					{
						"key": "Sec-Fetch-Dest",
						"value": "document"
					},
					{
						"key": "Referer",
						"value": "http://localhost:8080/login"
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9"
					},
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{csrfTokenName}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_csrf",
							"value": "{{csrfTokenName}}",
							"type": "text"
						},
						{
							"key": "user_name",
							"value": "user",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						},
						{
							"key": "Submit",
							"value": "Login",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15cccc5c-b9c6-41a6-bfb6-c96971592ee4",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be okay to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody(Array(3));",
							"    pm.response.to.not.have.jsonBody(\"error\");",
							"})",
							"",
							"var jsData = JSON.parse(responseBody);",
							"pm.test(\"Check Response\", function () {",
							"    pm.expect(jsData[0].id).is.to.equal(1); ",
							"    pm.expect(jsData[0].make).is.to.equal(\"Ford\"); ",
							"    pm.expect(jsData[0].model).is.to.equal(\"Mustang\"); ",
							"    pm.expect(jsData[0].year).is.to.equal(1998); ",
							"    pm.expect(jsData[1].id).is.to.equal(2); ",
							"    pm.expect(jsData[1].make).is.to.equal(\"Acura\"); ",
							"    pm.expect(jsData[1].model).is.to.equal(\"ILX\"); ",
							"    pm.expect(jsData[1].year).is.to.equal(2015); ",
							"    pm.expect(jsData[2].id).is.to.equal(3); ",
							"    pm.expect(jsData[2].make).is.to.equal(\"Honda\"); ",
							"    pm.expect(jsData[2].model).is.to.equal(\"CRV\"); ",
							"    pm.expect(jsData[2].year).is.to.equal(2018); ",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{crsfTokenName}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/cars/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get One Car",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15cccc5c-b9c6-41a6-bfb6-c96971592ee4",
						"exec": [
							"",
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be okay to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody(Array(1));",
							"    pm.response.to.not.have.jsonBody(\"error\");",
							"})",
							"",
							"var jsData = JSON.parse(responseBody);",
							"pm.test(\"Check Response\", function () {",
							"    pm.expect(jsData.id).is.to.equal(1); ",
							"    pm.expect(jsData.make).is.to.equal(\"Ford\"); ",
							"    pm.expect(jsData.model).is.to.equal(\"Mustang\"); ",
							"    pm.expect(jsData.year).is.to.equal(1998); ",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{crsfTokenName}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/cars/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put A Car",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ae15c1a6-490f-4766-ac61-87a050d9cdc5",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be okay to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody(Array(1));",
							"    pm.response.to.not.have.jsonBody(\"error\");",
							"})",
							"",
							"var jsData = JSON.parse(responseBody);",
							"pm.collectionVariables.set(\"car_id\", jsData.id);",
							"pm.test(\"Check Response\", function () {",
							"    pm.expect(jsData.id).is.not.null; ",
							"    pm.expect(jsData.make).is.to.equal(\"Rolls Royce\"); ",
							"    pm.expect(jsData.model).is.to.equal(\"Silver Ghost\"); ",
							"    pm.expect(jsData.year).is.to.equal(1906); ",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json; charset=UTF-8"
					},
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{csrfTokenName}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"make\":\"Rolls Royce\",\n\t\"model\":\"Silver Ghost\",\n\t\"year\":1906\n}"
				},
				"url": {
					"raw": "localhost:8080/cars",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Car 4 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "57b8ee0f-1ed2-4e94-a68c-599dc880fab4",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{csrfTokenName}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/cars/{{car_id}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						"{{car_id}}"
					],
					"query": [
						{
							"key": "X-XSRF_TOKEN",
							"value": "{{crsfTokenName}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Cache-Control",
						"value": "max-age=0"
					},
					{
						"key": "Upgrade-Insecure-Requests",
						"value": "1"
					},
					{
						"key": "Origin",
						"value": "http://localhost:8080"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36"
					},
					{
						"key": "Accept",
						"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "navigate"
					},
					{
						"key": "Sec-Fetch-User",
						"value": "?1"
					},
					{
						"key": "Sec-Fetch-Dest",
						"value": "document"
					},
					{
						"key": "Referer",
						"value": "http://localhost:8080/"
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9"
					},
					{
						"key": "Cookie",
						"value": "JSESSIONID=04BC4BF43DF33C169A16A725ABD751D4; XSRF-TOKEN=78f48453-d8ba-45d5-a7dd-b7acd04aeb42"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_csrf",
							"value": "{{csrfTokenName}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"id": "84fc9a3d-b1c7-489c-9990-f6ac310f30a9",
			"key": "csrfTokenName",
			"value": "",
			"type": "string"
		},
		{
			"id": "0ba0710b-f09f-46cb-a67c-9eeb2b66ef09",
			"key": "car_id",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}